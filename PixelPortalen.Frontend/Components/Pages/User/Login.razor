@page "/login"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider

<h2 class="title text-center my-4">Logga in</h2>

<div class="d-flex justify-content-center">
    <div class="pp-card p-4" style="width: 100%; max-width: 400px;">
        <div>
            @if (!string.IsNullOrEmpty(loginMessage))
            {
                <div class="alert alert-info" role="alert">
                    @loginMessage
                </div>
            }
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email:</label>
            <input @bind="loginModel.Email" type="email" class="form-control" id="email" placeholder="exempel@pixelportalen.nu" />
        </div>
        <div class="mb-3">
            <label for="password" class="form-label">Lösenord:</label>
            <input @bind="loginModel.Password" type="password" class="form-control" id="password" placeholder="skriv in lösenord" />
        </div>
        <div class="d-flex justify-content-between mt-3">
            <button id="LoginButton" type="button" class="btn btn-info text-light me-3" @onclick="LoginUser">Logga in</button>
            <button id="RegisterButton" type="button" class="btn btn-secondary" @onclick="NavigateToRegister">Registrera här</button>
        </div>
    </div>
</div>

@code {
    private LoginDTO loginModel = new LoginDTO() { Email = "", Password = "" };
    private string loginMessage = string.Empty;

    private async Task LoginUser()
    {
        // login logik
        var response = await Http.PostAsJsonAsync("api/Customers/login", loginModel);

        if(response.IsSuccessStatusCode)
        {
            var authResult = await response.Content.ReadFromJsonAsync<AuthResult>();
            await ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsAuthenticated(authResult.Token);
            loginMessage = "Du är nu inloggad!";
            NavigationManager.NavigateTo("/",true);
        }
        else
        {
            loginMessage = "Något gick fel, ditt lösen eller email är antingen felskriven eller så är du inte registrerad.";
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}